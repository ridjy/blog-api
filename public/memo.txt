- install FOS rest bundle 
composer require friendsofsymfony/rest-bundle

- config.yaml
    clé: fos_rest

http://localhost:8000/articles/1
get article soit géré par une route ou soit par l'annotation de FOS rest_bundle

- body converter pour créer une ressource 
JSON à POSTER
{
	"title": "Le titre de mon article ",
	"content": "Le contenu de mon article.",
	"author": {
		"fullname": "Sarah Khalil",
		"biography": "Ma biographie."
	}
}

http://localhost:8000/api/articles_rest
il faut mettre dans la configuration la route /api/..

- search service enabled (fos_rest en parametre)
php bin/console debug:container fos_rest

-QueryParams et les RequestParams.
dans fos_rest.yaml 
param_fetcher_listener: true
  # si la valeur est à  force, nous sommes en mesure de recevoir les paramètres directement par leur nom dans le controller en injection de dépendance

http://localhost:8000/api/author/list
=> il faut indiquer le chemin et le type de retour dans la configuration pour ne pas avoir l'erreur 406 not acceptable


- paginer les résultats de la requête 
composer require babdev/pagerfanta-bundle
https://www.babdev.com/open-source/packages/pagerfantabundle/docs/3.x/installation
le bundle est obsolète depuis symfony 5, il est préconisé de passer par API Platform 

- validator
composant deja avc SF puis dans les annotations Assert

- listener 
creation du service en charge de la serialisation du retour 
creation d'un listener ecoutant kernel.exception appelant le service créé ci-dessus

- update
http://localhost:8000/api/articles/update/{id}
- delete
http://localhost:8000/api/article/delete/8


- API autodecouvrable RESTful 
cad mettre les liens permettant de manipuler la ressource dans les resultats de l'API
l'élément _links contient tous les liens que l'utilisateur est en mesure d'utiliser, en rapport avec la ressource ;
l'élément _embedded contient tous les éléments connexes à la ressource, ici, l'auteur.

Hateoas\Representation\PaginatedRepresentation
utiliser ce bundle également pour la pagination